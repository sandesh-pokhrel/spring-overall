version: '3.8'
services:
  mysql:
    image: mysql:8.0.30
    container_name: mysql
    volumes:
      - "D:/Volumes/mysql:/var/lib/mysql"
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=no
      - MYSQL_ROOT_PASSWORD=sagarmatha
      - MYSQL_USER=sandesh
      - MYSQL_PASSWORD=sagarmatha
      - MYSQL_DATABASE=overall
    ports:
      - "3306:3306"
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,PLAINTEXT_HOST://localhost:29092 #change localhost to docker container name
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
  tempo:
    image: grafana/tempo:r129-dc19306
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yml" ]
    volumes:
      - "./src/main/resources/monitoring/tempo/tempo.yml:/etc/tempo.yml"
    ports:
      - "3200:3200"   # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http
  loki:
    image: grafana/loki:main-8d01cbf
    container_name: loki
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.91.0
    container_name: otel-collector
    depends_on:
      - tempo
    command:
      - --config=/etc/otelcol-cont/otel-collector.yml
    volumes:
      - "./src/main/resources/monitoring/otel:/etc/otelcol-cont/"
    ports:
#      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus's metrics exposed by the collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
#      - "55679:55679" # zpages extension
  prometheus:
#    image: prom/prometheus:v2.38.0
    image: prom/prometheus:v2.45.2
    container_name: prometheus
    depends_on:
      - otel-collector
    volumes:
      - "./src/main/resources/monitoring/prometheus:/etc/prometheus/"
    command:
#      - '--config.file=/etc/prometheus/prometheus.yml' #config for scraping directly from our spring boot app
      - '--config.file=/etc/prometheus/prometheus-otel.yml' #config for scraping from otel exporter
    ports:
      - "9090:9090"
  grafana:
#    image: grafana/grafana:9.1.0
    image: grafana/grafana:10.0.10
    container_name: grafana
    depends_on:
      - prometheus
      - tempo
      - loki
    volumes:
      - "./src/main/resources/monitoring/grafana/provisioning:/etc/grafana/provisioning/"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    ports:
      - "3000:3000"
  keycloak:
    image: quay.io/keycloak/keycloak:23.0.5
    command: [ "start-dev", "--import-realm" ]
    restart: unless-stopped
    depends_on:
      - mysql
    environment:
      KC_DB: mysql
      KC_DB_USERNAME: sandesh
      KC_DB_PASSWORD: sagarmatha
      KC_DB_URL: "jdbc:mysql://mysql:3306/overall"
      KC_METRICS_ENABLED: true
      KC_REALM_NAME: overall
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8087:8080"
    volumes:
      - "D:/Volumes/keycloak:/opt/keycloak/data/import/realm.json"
